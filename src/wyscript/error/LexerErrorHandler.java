package wyscript.error;

import java.util.List;

import wyscript.Main;
import static wyscript.util.SyntaxError.*;

/**
 * Utility class that takes all errors generated by the lexer and prints
 * appropriate messages to the user.
 *
 * @author Daniel Campbell
 *
 */
public class LexerErrorHandler {

	public static void handle(List<LexerErrorData> errors) {
		for (LexerErrorData data : errors) {

			String msg = null;
			String suggestion = "";

			switch (data.type()) {

			case INVALID_CHARACTER:
				msg = String.format("Invalid character in file: %c" +
						"\nTokens must be a valid java identifier, an operator, whitespace, or a string/char/number constant", data.found());
				break;

			case INVALID_ESCAPE:
				msg = String.format("Invalid escape character: '\\%c'\nOnly escape characters '\\n' and '\\t' allowed.", data.found());
				suggestion = "n";
				break;

			case INVALID_OP:
				msg = "Invalid operator in file: " + data.found();
				suggestion = "+";
				break;

			case INVALID_WHITESPACE:
				msg = String.format("Invalid whitespace: '\\%c'\nOnly '\\t', ' ', '\\n' and \"\\r\\n\" allowed.", data.found());
				suggestion = " ";
				break;

			case MISSING_CHAR_END:
				msg = "Error, missing closing '";
				suggestion = data.found()+"'";
				break;

			case MISSING_STRING_END:
				msg = "Error, missing closing \"";
				suggestion = data.found()+"\"";
				break;

			case MISSING_COMMENT_END:
				msg = "Error, missing closing */";
				suggestion = data.found() + "*/";
			}
			outputSourceError(Main.errout, msg, data.filename(), data.pos(), data.pos());
			outputSuggestion(Main.errout, suggestion, data.filename(), data.pos(), data.pos());
		}
		throw new HandledException();
	}
}